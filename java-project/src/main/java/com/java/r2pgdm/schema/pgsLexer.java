package com.java.r2pgdm.schema;

// Generated from pgs.g4 by ANTLR 4.3
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({ "all", "warnings", "unchecked", "unused", "cast" })
public class pgsLexer extends Lexer {
	static {
		RuntimeMetaData.checkVersion("4.3", RuntimeMetaData.VERSION);
	}

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache = new PredictionContextCache();
	public static final int T__28 = 1, T__27 = 2, T__26 = 3, T__25 = 4, T__24 = 5, T__23 = 6, T__22 = 7, T__21 = 8,
			T__20 = 9, T__19 = 10, T__18 = 11, T__17 = 12, T__16 = 13, T__15 = 14, T__14 = 15, T__13 = 16,
			T__12 = 17, T__11 = 18, T__10 = 19, T__9 = 20, T__8 = 21, T__7 = 22, T__6 = 23, T__5 = 24,
			T__4 = 25, T__3 = 26, T__2 = 27, T__1 = 28, T__0 = 29, CREATE = 30, NODE = 31, EDGE = 32,
			OPEN = 33, OPTIONAL = 34, TYPE = 35, GRAPH = 36, STRICT = 37, LOOSE = 38, ABSTRACT = 39,
			IMPORTS = 40, SP = 41, WHITESPACE = 42, StringLiteral = 43, EscapedChar = 44, HexDigit = 45,
			Digit = 46, NonZeroDigit = 47, NonZeroOctDigit = 48, HexLetter = 49, ZeroDigit = 50;
	public static String[] modeNames = {
			"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
			"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'",
			"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'",
			"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'",
			"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'",
			"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'",
			"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''",
			"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'",
			"'2'"
	};
	public static final String[] ruleNames = {
			"T__28", "T__27", "T__26", "T__25", "T__24", "T__23", "T__22", "T__21",
			"T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13",
			"T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4",
			"T__3", "T__2", "T__1", "T__0", "CREATE", "NODE", "EDGE", "OPEN", "OPTIONAL",
			"TYPE", "GRAPH", "STRICT", "LOOSE", "ABSTRACT", "IMPORTS", "SP", "WHITESPACE",
			"FF", "EscapedSymbolicName_0", "RS", "StringLiteral_1", "GS", "FS", "CR",
			"SPACE", "TAB", "StringLiteral_0", "LF", "VT", "US", "StringLiteral",
			"EscapedChar", "HexDigit", "Digit", "NonZeroDigit", "NonZeroOctDigit",
			"HexLetter", "ZeroDigit"
	};

	public pgsLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this, _ATN, _decisionToDFA, _sharedContextCache);
	}

	@Override
	public String getGrammarFileName() {
		return "pgs.g4";
	}

	@Override
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override
	public String[] getRuleNames() {
		return ruleNames;
	}

	@Override
	public String getSerializedATN() {
		return _serializedATN;
	}

	@Override
	public String[] getModeNames() {
		return modeNames;
	}

	@Override
	public ATN getATN() {
		return _ATN;
	}

	public static final String _serializedATN = "\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\64\u015b\b\1\4\2"
			+
			"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4" +
			"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22" +
			"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31" +
			"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t" +
			" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t" +
			"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64" +
			"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t" +
			"=\4>\t>\4?\t?\4@\t@\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3" +
			"\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3" +
			"\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3" +
			"\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3" +
			"\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3" +
			"!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3%" +
			"\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(" +
			"\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3)\3*\6*\u0105\n*\r*\16*\u0106" +
			"\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\5+\u0114\n+\3,\3,\3-\3-\3.\3.\3/\3/" +
			"\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66" +
			"\3\67\3\67\38\38\39\69\u0131\n9\r9\169\u0132\3:\3:\3:\3:\3:\3:\3:\3:\3" +
			":\3:\3:\3:\3:\3:\3:\3:\3:\3:\5:\u0147\n:\3;\3;\5;\u014b\n;\3<\3<\5<\u014f" +
			"\n<\3=\3=\5=\u0153\n=\3>\3>\3?\5?\u0158\n?\3@\3@\2\2A\3\3\5\4\7\5\t\6" +
			"\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24" +
			"\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K" +
			"\'M(O)Q*S+U,W\2Y\2[\2]\2_\2a\2c\2e\2g\2i\2k\2m\2o\2q-s.u/w\60y\61{\62" +
			"}\63\177\64\3\2%\4\2EEee\4\2TTtt\4\2GGgg\4\2CCcc\4\2VVvv\4\2PPpp\4\2Q" +
			"Qqq\4\2FFff\4\2IIii\4\2RRrr\4\2KKkk\4\2NNnn\4\2[[{{\4\2JJjj\4\2UUuu\4" +
			"\2DDdd\4\2OOoo\n\2\u00a2\u00a2\u1682\u1682\u1810\u1810\u2002\u200c\u202a" +
			"\u202b\u2031\u2031\u2061\u2061\u3002\u3002\3\2\16\16\3\2bb\3\2  \4\2)" +
			")^^\3\2\37\37\3\2\36\36\3\2\17\17\3\2\"\"\3\2\13\13\4\2$$^^\3\2\f\f\3" +
			"\2\r\r\3\2!!\7\2//\62;C\\aac|\17\2$$))DDHHPPTTVV^^ddhhppttvv\4\2WWww\4" +
			"\2CHch\u015e\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2" +
			"\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2" +
			"\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2" +
			"\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2" +
			"\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3" +
			"\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2" +
			"\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2" +
			"S\3\2\2\2\2U\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3" +
			"\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\3\u0081\3\2\2\2\5\u0083\3\2" +
			"\2\2\7\u0085\3\2\2\2\t\u0087\3\2\2\2\13\u0089\3\2\2\2\r\u008b\3\2\2\2" +
			"\17\u008d\3\2\2\2\21\u008f\3\2\2\2\23\u0091\3\2\2\2\25\u0093\3\2\2\2\27" +
			"\u0095\3\2\2\2\31\u0097\3\2\2\2\33\u0099\3\2\2\2\35\u009b\3\2\2\2\37\u009d" +
			"\3\2\2\2!\u009f\3\2\2\2#\u00a1\3\2\2\2%\u00a3\3\2\2\2\'\u00a5\3\2\2\2" +
			")\u00a7\3\2\2\2+\u00a9\3\2\2\2-\u00ab\3\2\2\2/\u00ad\3\2\2\2\61\u00af" +
			"\3\2\2\2\63\u00b1\3\2\2\2\65\u00b3\3\2\2\2\67\u00b5\3\2\2\29\u00b7\3\2" +
			"\2\2;\u00b9\3\2\2\2=\u00bb\3\2\2\2?\u00c2\3\2\2\2A\u00c7\3\2\2\2C\u00cc" +
			"\3\2\2\2E\u00d1\3\2\2\2G\u00da\3\2\2\2I\u00df\3\2\2\2K\u00e5\3\2\2\2M" +
			"\u00ec\3\2\2\2O\u00f2\3\2\2\2Q\u00fb\3\2\2\2S\u0104\3\2\2\2U\u0113\3\2" +
			"\2\2W\u0115\3\2\2\2Y\u0117\3\2\2\2[\u0119\3\2\2\2]\u011b\3\2\2\2_\u011d" +
			"\3\2\2\2a\u011f\3\2\2\2c\u0121\3\2\2\2e\u0123\3\2\2\2g\u0125\3\2\2\2i" +
			"\u0127\3\2\2\2k\u0129\3\2\2\2m\u012b\3\2\2\2o\u012d\3\2\2\2q\u0130\3\2" +
			"\2\2s\u0134\3\2\2\2u\u014a\3\2\2\2w\u014e\3\2\2\2y\u0152\3\2\2\2{\u0154" +
			"\3\2\2\2}\u0157\3\2\2\2\177\u0159\3\2\2\2\u0081\u0082\7\ufe5a\2\2\u0082" +
			"\4\3\2\2\2\u0083\u0084\7}\2\2\u0084\6\3\2\2\2\u0085\u0086\7=\2\2\u0086" +
			"\b\3\2\2\2\u0087\u0088\7\177\2\2\u0088\n\3\2\2\2\u0089\u008a\7\u2016\2" +
			"\2\u008a\f\3\2\2\2\u008b\u008c\7A\2\2\u008c\16\3\2\2\2\u008d\u008e\7\uff20" +
			"\2\2\u008e\20\3\2\2\2\u008f\u0090\7\u2214\2\2\u0090\22\3\2\2\2\u0091\u0092" +
			"\7(\2\2\u0092\24\3\2\2\2\u0093\u0094\7*\2\2\u0094\26\3\2\2\2\u0095\u0096" +
			"\7\u2012\2\2\u0096\30\3\2\2\2\u0097\u0098\7.\2\2\u0098\32\3\2\2\2\u0099" +
			"\u009a\7\u2014\2\2\u009a\34\3\2\2\2\u009b\u009c\7\ufe67\2\2\u009c\36\3" +
			"\2\2\2\u009d\u009e\7\u300b\2\2\u009e \3\2\2\2\u009f\u00a0\7\ufe65\2\2" +
			"\u00a0\"\3\2\2\2\u00a1\u00a2\7<\2\2\u00a2$\3\2\2\2\u00a3\u00a4\7]\2\2" +
			"\u00a4&\3\2\2\2\u00a5\u00a6\7~\2\2\u00a6(\3\2\2\2\u00a7\u00a8\7_\2\2\u00a8" +
			"*\3\2\2\2\u00a9\u00aa\7@\2\2\u00aa,\3\2\2\2\u00ab\u00ac\7\u2015\2\2\u00ac" +
			".\3\2\2\2\u00ad\u00ae\7\uff0f\2\2\u00ae\60\3\2\2\2\u00af\u00b0\7\u2017" +
			"\2\2\u00b0\62\3\2\2\2\u00b1\u00b2\7\u00af\2\2\u00b2\64\3\2\2\2\u00b3\u00b4" +
			"\7+\2\2\u00b4\66\3\2\2\2\u00b5\u00b6\7\u27eb\2\2\u00b68\3\2\2\2\u00b7" +
			"\u00b8\7/\2\2\u00b8:\3\2\2\2\u00b9\u00ba\7\u2013\2\2\u00ba<\3\2\2\2\u00bb" +
			"\u00bc\t\2\2\2\u00bc\u00bd\t\3\2\2\u00bd\u00be\t\4\2\2\u00be\u00bf\t\5" +
			"\2\2\u00bf\u00c0\t\6\2\2\u00c0\u00c1\t\4\2\2\u00c1>\3\2\2\2\u00c2\u00c3" +
			"\t\7\2\2\u00c3\u00c4\t\b\2\2\u00c4\u00c5\t\t\2\2\u00c5\u00c6\t\4\2\2\u00c6" +
			"@\3\2\2\2\u00c7\u00c8\t\4\2\2\u00c8\u00c9\t\t\2\2\u00c9\u00ca\t\n\2\2" +
			"\u00ca\u00cb\t\4\2\2\u00cbB\3\2\2\2\u00cc\u00cd\t\b\2\2\u00cd\u00ce\t" +
			"\13\2\2\u00ce\u00cf\t\4\2\2\u00cf\u00d0\t\7\2\2\u00d0D\3\2\2\2\u00d1\u00d2" +
			"\t\b\2\2\u00d2\u00d3\t\13\2\2\u00d3\u00d4\t\6\2\2\u00d4\u00d5\t\f\2\2" +
			"\u00d5\u00d6\t\b\2\2\u00d6\u00d7\t\7\2\2\u00d7\u00d8\t\5\2\2\u00d8\u00d9" +
			"\t\r\2\2\u00d9F\3\2\2\2\u00da\u00db\t\6\2\2\u00db\u00dc\t\16\2\2\u00dc" +
			"\u00dd\t\13\2\2\u00dd\u00de\t\4\2\2\u00deH\3\2\2\2\u00df\u00e0\t\n\2\2" +
			"\u00e0\u00e1\t\3\2\2\u00e1\u00e2\t\5\2\2\u00e2\u00e3\t\13\2\2\u00e3\u00e4" +
			"\t\17\2\2\u00e4J\3\2\2\2\u00e5\u00e6\t\20\2\2\u00e6\u00e7\t\6\2\2\u00e7" +
			"\u00e8\t\3\2\2\u00e8\u00e9\t\f\2\2\u00e9\u00ea\t\2\2\2\u00ea\u00eb\t\6" +
			"\2\2\u00ebL\3\2\2\2\u00ec\u00ed\t\r\2\2\u00ed\u00ee\t\b\2\2\u00ee\u00ef" +
			"\t\b\2\2\u00ef\u00f0\t\20\2\2\u00f0\u00f1\t\4\2\2\u00f1N\3\2\2\2\u00f2" +
			"\u00f3\t\5\2\2\u00f3\u00f4\t\21\2\2\u00f4\u00f5\t\20\2\2\u00f5\u00f6\t" +
			"\6\2\2\u00f6\u00f7\t\3\2\2\u00f7\u00f8\t\5\2\2\u00f8\u00f9\t\2\2\2\u00f9" +
			"\u00fa\t\6\2\2\u00faP\3\2\2\2\u00fb\u00fc\t\f\2\2\u00fc\u00fd\t\22\2\2" +
			"\u00fd\u00fe\t\13\2\2\u00fe\u00ff\t\b\2\2\u00ff\u0100\t\3\2\2\u0100\u0101" +
			"\t\6\2\2\u0101\u0102\t\20\2\2\u0102R\3\2\2\2\u0103\u0105\5U+\2\u0104\u0103" +
			"\3\2\2\2\u0105\u0106\3\2\2\2\u0106\u0104\3\2\2\2\u0106\u0107\3\2\2\2\u0107" +
			"T\3\2\2\2\u0108\u0114\5e\63\2\u0109\u0114\5g\64\2\u010a\u0114\5k\66\2" +
			"\u010b\u0114\5m\67\2\u010c\u0114\5W,\2\u010d\u0114\5c\62\2\u010e\u0114" +
			"\5a\61\2\u010f\u0114\5_\60\2\u0110\u0114\5[.\2\u0111\u0114\5o8\2\u0112" +
			"\u0114\t\23\2\2\u0113\u0108\3\2\2\2\u0113\u0109\3\2\2\2\u0113\u010a\3" +
			"\2\2\2\u0113\u010b\3\2\2\2\u0113\u010c\3\2\2\2\u0113\u010d\3\2\2\2\u0113" +
			"\u010e\3\2\2\2\u0113\u010f\3\2\2\2\u0113\u0110\3\2\2\2\u0113\u0111\3\2" +
			"\2\2\u0113\u0112\3\2\2\2\u0114V\3\2\2\2\u0115\u0116\t\24\2\2\u0116X\3" +
			"\2\2\2\u0117\u0118\n\25\2\2\u0118Z\3\2\2\2\u0119\u011a\t\26\2\2\u011a" +
			"\\\3\2\2\2\u011b\u011c\n\27\2\2\u011c^\3\2\2\2\u011d\u011e\t\30\2\2\u011e" +
			"`\3\2\2\2\u011f\u0120\t\31\2\2\u0120b\3\2\2\2\u0121\u0122\t\32\2\2\u0122" +
			"d\3\2\2\2\u0123\u0124\t\33\2\2\u0124f\3\2\2\2\u0125\u0126\t\34\2\2\u0126" +
			"h\3\2\2\2\u0127\u0128\n\35\2\2\u0128j\3\2\2\2\u0129\u012a\t\36\2\2\u012a" +
			"l\3\2\2\2\u012b\u012c\t\37\2\2\u012cn\3\2\2\2\u012d\u012e\t \2\2\u012e" +
			"p\3\2\2\2\u012f\u0131\t!\2\2\u0130\u012f\3\2\2\2\u0131\u0132\3\2\2\2\u0132" +
			"\u0130\3\2\2\2\u0132\u0133\3\2\2\2\u0133r\3\2\2\2\u0134\u0146\7^\2\2\u0135" +
			"\u0147\t\"\2\2\u0136\u0137\t#\2\2\u0137\u0138\5u;\2\u0138\u0139\5u;\2" +
			"\u0139\u013a\5u;\2\u013a\u013b\5u;\2\u013b\u0147\3\2\2\2\u013c\u013d\t" +
			"#\2\2\u013d\u013e\5u;\2\u013e\u013f\5u;\2\u013f\u0140\5u;\2\u0140\u0141" +
			"\5u;\2\u0141\u0142\5u;\2\u0142\u0143\5u;\2\u0143\u0144\5u;\2\u0144\u0145" +
			"\5u;\2\u0145\u0147\3\2\2\2\u0146\u0135\3\2\2\2\u0146\u0136\3\2\2\2\u0146" +
			"\u013c\3\2\2\2\u0147t\3\2\2\2\u0148\u014b\5w<\2\u0149\u014b\5}?\2\u014a" +
			"\u0148\3\2\2\2\u014a\u0149\3\2\2\2\u014bv\3\2\2\2\u014c\u014f\5\177@\2" +
			"\u014d\u014f\5y=\2\u014e\u014c\3\2\2\2\u014e\u014d\3\2\2\2\u014fx\3\2" +
			"\2\2\u0150\u0153\5{>\2\u0151\u0153\4:;\2\u0152\u0150\3\2\2\2\u0152\u0151" +
			"\3\2\2\2\u0153z\3\2\2\2\u0154\u0155\4\639\2\u0155|\3\2\2\2\u0156\u0158" +
			"\t$\2\2\u0157\u0156\3\2\2\2\u0158~\3\2\2\2\u0159\u015a\7\62\2\2\u015a" +
			"\u0080\3\2\2\2\13\2\u0106\u0113\u0132\u0146\u014a\u014e\u0152\u0157\2";
	public static final ATN _ATN = new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}